swagger: "2.0"
info:
  version: "0.0.1"
  title: Recommendations API
# While you're developing, this should point to your local machine.
host: localhost
# The base path prefixes all resource paths.
basePath: /
schemes:
  # Tip: Remove http to make production-grade.
  - http
  - https
# Format of request bodies a client can send (Content-Type).
consumes:
  - application/json
# Format of the response bodies you can return to the client (Accepts).
produces:
  - application/json
x-a127-config: {}
x-a127-services: {}
paths:
  # The path that clients will use when requesting recommendations. This 
  # is this API's only endpoint.
  /customers/{customer_id}/recommendations:
    # Specifies the name of the controller JavaScript file that 
    # contains logic for this path: recommendations.js.
    x-swagger-router-controller: recommendations
    x-a127-apply: {}
    # Specifies support for handling GET requests to this API endpoint.
    get:
      description: Returns personalized customer recommendations.
      # The name of the function in the controller file that will
      # contain the logic for GET requests to this API endpoint.
      operationId: getRecommendations
      # Parameters support for GET requests.
      parameters:
        # With the name parameter they pass, clients specify the user ID 
        # for the customer whose recommendations should be returned.
        - name: customer_id
          in: path
          description: The customer Id to get recommendations for. Use "@me" to leverage customer Id associated assigned to the access token. When no customer Id is associated to the access token a default set of products is returned. With this design we can achieve two purposes, serving apps trusted by the API that have broader access and untrusted apps, which are limited by the customer Id bound to the access token.
          required: true
          type: string
        - name: ql
          in: query
          description: Works similar to a SQL relational database in which you can specify, columns to be included, ordering, and filtering criteria. Since the backend of this API is based on Apigee BaaS, you can apply the same syntax available from this page http://apigee.com/docs/app-services/content/querying-your-app-services-data. If this parameter is not present, by default all entity attributes are returned. Example, /recommendations?ql=select * where productName contains 'BermudaShorts' order by name asc. Query examples in this content are shown URL unencoded to make them easier to read. Keep in mind that you might need to encode query strings if you're sending them as part of URLs, such as when you're executing them with the cURL tool.
          required: false
          type: string
        - name: cursor
          in: query
          description: An encoded representation of the query position pointing to a set of results. To retrieve the next set of results, pass the cursor with your next call for most results. Learn more about this feature here http://apigee.com/docs/app-services/content/working-queries#cursor
          required: false
          type: string
        - name: limit
          in: query
          description: limit results returned. Default first 10 elements.
          required: false
          type: integer
      # Supported responses.
      responses:
        # Response for a successful call to this API endpoint.
        "200":
          description: Success
          schema:
            # Reference to the response definition (included in this file)
            # that will be returned for a successful call to this API endpoint.
            $ref: "#/definitions/RecommendationsResponse"
        # Response for an unsuccessful call.
        default:
          description: Error
          schema:
            # Reference to the response definition (also in this file) to 
            # return to indicate an unsuccessful call.
            $ref: "#/definitions/ErrorResponse"
# Definitions for response types -- how this API will respond for successful 
# and unsuccessful calls.
definitions:
  # Definition for the shape of data to return if the call is successful.
  RecommendationsResponse:
    type: object
    properties:
      entities:
        type: array
        description: represents a collection of recommended products associated for a specific customer
        items:
          type: object
          properties:
            type:
              type: string
              description: this can be removed, since this is internal to BaaS
            created:
              type: number
              description: this can be removed, since this is internal to BaaS
            modified:
              type: number
              description: this can be removed, since this is internal to BaaS
            productName:
              type: string
            scoreType:
              type: string
            scoreValue:
              type: number
            status:
              type: string
            userId:
              type: string
            category:
              type: string
            CatName:
              type: string
            description:
              type: string
            discount:
              type: number
            partNo:
              type: string
            photos:
              type: array
              items:
                type: object
                description: URL collection of photos
                properties:
                  photo:
                    type: string
                    description: URL photo
            price:
              type: number
            productName2:
              type: string
            rating:
              type: number
            metadata/connecting/products:
              type: string
            metadata/path:
              type: string
      cursor:
        type: string
      count:
        type: string
      duration:
        type: string
  # Definition for the response in case of an unsuccessful call.
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: number
        format: int32